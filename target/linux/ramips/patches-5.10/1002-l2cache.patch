--- a/arch/mips/include/asm/dma.h	2022-03-28 15:57:11.000000000 +0800
+++ b/arch/mips/include/asm/dma.h	2022-10-10 19:39:41.967020054 +0800
@@ -87,6 +87,8 @@
 #if defined(CONFIG_SGI_IP22) || defined(CONFIG_SGI_IP28)
 /* don't care; ISA bus master won't work, ISA slave DMA supports 32bit addr */
 #define MAX_DMA_ADDRESS		PAGE_OFFSET
+#elif defined(CONFIG_MIPS_ER35_WORKAROUNDS)
+#define MAX_DMA_ADDRESS		(PAGE_OFFSET + CONFIG_MIPS_ER35_RESERVED_SPACE)
 #else
 #define MAX_DMA_ADDRESS		(PAGE_OFFSET + 0x01000000)
 #endif

--- a/arch/mips/Kconfig	2022-10-10 19:26:00.659722000 +0800
+++ b/arch/mips/Kconfig	2022-10-10 19:38:19.691267218 +0800
@@ -2527,6 +2527,17 @@
 	depends on CPU_SB1 && CPU_SB1_PASS_2
 	default y
 
+config MIPS_ER35_WORKAROUNDS
+	bool
+	depends on SYS_SUPPORTS_MIPS_CPS
+	select ZONE_DMA
+	default y
+
+config MIPS_ER35_RESERVED_SPACE
+	hex
+	default 0x1000000
+	depends on MIPS_ER35_WORKAROUNDS
+
 choice
 	prompt "SmartMIPS or microMIPS ASE support"
 

--- a/arch/mips/kernel/head.S	2022-10-10 19:26:00.659722000 +0800
+++ b/arch/mips/kernel/head.S	2022-10-10 19:42:17.458014471 +0800
@@ -22,6 +22,7 @@
 #include <asm/irqflags.h>
 #include <asm/regdef.h>
 #include <asm/mipsregs.h>
+#include <asm/cacheops.h>
 #include <asm/stackframe.h>
 
 #include <kernel-entry-init.h>
@@ -93,6 +94,67 @@
 
 	setup_c0_status_pri
 
+#ifdef CONFIG_MIPS_ER35_WORKAROUNDS
+	/* Jump to KSEG1 so that we can perform cache related operations */
+	PTR_LA	t0, 0f
+	li	t1, 5
+	ins	t0, t1, 29, 3
+	jr	t0
+	nop
+0:
+
+	/* Calculate L2 Cache size */
+	MFC0	t0, CP0_CONFIG, 2
+	ext	t1, t0, 4, 4
+	li	t2, 2
+	sllv	t1, t2, t1		/* Cache line size */
+
+	ext	t2, t0, 8, 4
+	li	t3, 64
+	sllv	t2, t3, t2		/* Sets per way */
+
+	ext	t3, t0, 0, 4
+	addiu	t3, 1			/* Number of ways */
+
+	mul	t2, t2, t3		/* Number of sets */
+
+
+	/* Flush L2 Cache before setting CCA overrides */
+	move	t3, zero
+1:
+	cache	Index_Writeback_Inv_SD, 0(t3)
+	sub	t2, 1
+	add	t3, t3, t1
+	bne	t2, zero, 1b
+	nop
+
+	sync
+
+	/*
+	 * Override bottom CONFIG_MIPS_ER35_RESERVED_SPACE of DDR to
+	 * Uncached (which will be reserved as DMA zone)
+	 */
+	MFC0	t0, CP0_CMGCRBASE
+	PTR_SLL	t0, t0, 4
+	li	t1, 5
+	ins	t0, t1, 29, 3
+
+	/* GCR_REG2_MASK */
+	lui	t1, (~((CONFIG_MIPS_ER35_RESERVED_SPACE - 1) >> 16)) & 0xffff
+	ori	t1, t1, 0x0051
+	sw	t1, 0xb8(t0)
+
+	/* GCR_REG2_BASE */
+	sw	zero, 0xb0(t0)
+
+	/* Set default override to Write-through */
+	lw	t1, 0x08(t0)
+	li	t2, 0xffff8000
+	and	t1, t1, t2
+	ori	t1, 0x10
+	sw	t1, 0x08(t0)
+#endif
+
 	/* We might not get launched at the address the kernel is linked to,
 	   so we jump there.  */
 	PTR_LA	t0, 0f

--- a/arch/mips/ralink/Kconfig	2022-10-10 19:26:01.019459000 +0800
+++ b/arch/mips/ralink/Kconfig	2022-10-10 19:43:52.611885079 +0800
@@ -63,6 +63,7 @@
 		select CLKSRC_MIPS_GIC
 		select HAVE_PCI if PCI_MT7621
 		select SOC_BUS
+		select MIPS_ER35_WORKAROUNDS
 endchoice
 
 choice

--- a/arch/mips/ralink/Platform	2022-03-28 15:57:11.000000000 +0800
+++ b/arch/mips/ralink/Platform	2022-10-10 19:44:28.126954727 +0800
@@ -29,5 +29,5 @@
 
 # Ralink MT7621
 #
-load-$(CONFIG_SOC_MT7621)	+= 0xffffffff80001000
+load-$(CONFIG_SOC_MT7621)	+= 0xffffffff80001000+$(CONFIG_MIPS_ER35_RESERVED_SPACE)
 cflags-$(CONFIG_SOC_MT7621)	+= -I$(srctree)/arch/mips/include/asm/mach-ralink/mt7621

--- a/kernel/dma/direct.c	2022-03-28 15:57:11.000000000 +0800
+++ b/kernel/dma/direct.c	2022-10-10 19:46:08.735205861 +0800
@@ -138,6 +138,9 @@
 	int err;
 
 	size = PAGE_ALIGN(size);
+	#ifdef CONFIG_MIPS_ER35_WORKAROUNDS
+	gfp |= __GFP_DMA;
+	#endif
 	if (attrs & DMA_ATTR_NO_WARN)
 		gfp |= __GFP_NOWARN;
 
